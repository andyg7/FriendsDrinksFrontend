version: v1.0
name: DNS Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Deploy Kubernetes configuration
    task:
      prologue:
        commands:
          - checkout
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - sudo ./aws/install
          - aws --version
      jobs:
        - name: Create configuration resources
          commands:
            - source semaphore/kubernetesiamenvsetup 2>&1
            - aws eks update-kubeconfig --name EKSCluster --kubeconfig awskubeconfig
            - kubectl --kubeconfig awskubeconfig cluster-info
            - kubectl --kubeconfig awskubeconfig get nodes
            - export clientId=$(aws cloudformation list-exports | jq -r '.Exports[] | select(.Name=="CognitoResources-UserPoolClientId") | .Value')
            - export userPoolId=$(aws cloudformation list-exports | jq -r '.Exports[] | select(.Name=="CognitoResources-UserPoolId") | .Value')
            - apply_tmp=$(mktemp)
            - cat kubernetes/10secret.yml | envsubst > $apply_tmp
            - kubectl --kubeconfig awskubeconfig apply -f $apply_tmp
            - rm -f $apply_tmp
            - kubectl --kubeconfig awskubeconfig apply -f kubernetes/10config.yml
      secrets:
        - name: ui-iam-user-secret
        - name: docker-hub-secret
      env_vars:
        - name: AWS_DEFAULT_REGION
          value: us-east-1
  - name: Deploy Kubernetes service
    task:
      prologue:
        commands:
          - checkout
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - sudo ./aws/install
          - aws --version
      jobs:
        - name: Deploy UI service
          commands:
            - source semaphore/kubernetesiamenvsetup 2>&1
            - aws eks update-kubeconfig --name EKSCluster --kubeconfig awskubeconfig
            - kubectl --kubeconfig awskubeconfig cluster-info
            - kubectl --kubeconfig awskubeconfig get nodes
            - apply_tmp=$(mktemp)
            - export certArn=$(aws acm  list-certificates | jq -r '.CertificateSummaryList[0].CertificateArn')
            - export serviceType=LoadBalancer
            - cat kubernetes/20service.yml | envsubst > $apply_tmp
            - cat $apply_tmp
            - kubectl --kubeconfig awskubeconfig apply -f $apply_tmp
            - rm -f $apply_tmp
      secrets:
        - name: ui-iam-user-secret
      env_vars:
        - name: AWS_DEFAULT_REGION
          value: us-east-1
  - name: Deploy Kubernetes app
    task:
      prologue:
        commands:
          - checkout
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - sudo ./aws/install
          - aws --version
      jobs:
        - name: Deploy UI app
          commands:
            - source semaphore/kubernetesiamenvsetup 2>&1
            - aws eks update-kubeconfig --name EKSCluster --kubeconfig awskubeconfig
            - kubectl --kubeconfig awskubeconfig cluster-info
            - kubectl --kubeconfig awskubeconfig get nodes
            - apply_tmp=$(mktemp)
            - ./kubernetes/generate_manifest.sh kubernetes/21app.yml $DOCKER_USERNAME/friendsdrinksui:$SEMAPHORE_WORKFLOW_ID $apply_tmp
            - cat $apply_tmp
            - kubectl --kubeconfig awskubeconfig apply -f $apply_tmp
            - kubectl --kubeconfig awskubeconfig rollout status -f $apply_tmp
            - rm -f $apply_tmp
      secrets:
        - name: ui-iam-user-secret
        - name: docker-hub-secret
      env_vars:
        - name: AWS_DEFAULT_REGION
          value: us-east-1

promotions:
  - name: DNS changes
    pipeline_file: dns.yml
    auto_promote:
      when: "result = 'passed'"
